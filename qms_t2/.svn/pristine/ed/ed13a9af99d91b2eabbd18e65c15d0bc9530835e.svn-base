package com.qms;

import java.util.Locale;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.support.ReloadableResourceBundleMessageSource;
import org.springframework.web.servlet.config.annotation.InterceptorRegistry;
import org.springframework.web.servlet.config.annotation.ViewResolverRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
import org.springframework.web.servlet.i18n.LocaleChangeInterceptor;
import org.springframework.web.servlet.i18n.SessionLocaleResolver;
import org.springframework.web.servlet.view.InternalResourceViewResolver;

@Configuration // 이 클래스가 스프링의 설정 클래스임을 나타냅니다.
public class SpringBootJavaJspConfig implements WebMvcConfigurer { // WebMvcConfigurer 인터페이스를 구현하여 웹 MVC 설정을 사용자 정의합니다.
    
    /**
     * 메세지 소스를 생성한다.
     */
    @Bean // 이 메서드가 스프링 빈을 정의함을 나타냅니다.
    public ReloadableResourceBundleMessageSource messageSource() { // 메시지 소스를 생성하는 메서드입니다.
        ReloadableResourceBundleMessageSource source = new ReloadableResourceBundleMessageSource(); // ReloadableResourceBundleMessageSource 객체를 생성합니다.
        source.setBasename("classpath:/messages/message"); // 메시지 파일의 기본 위치와 이름을 설정합니다.
        source.setDefaultEncoding("UTF-8"); // 기본 인코딩을 UTF-8로 설정합니다.
        return source; // 메시지 소스 빈을 반환합니다.
    }

    /**
     * 변경된 언어 정보를 기억할 로케일 리졸버를 생성한다.
     * 여기서는 세션에 저장하는 방식을 사용한다.
     * 기본 로케일을 한국어로 설정한다.
     * @return
     */
    @Bean // 이 메서드가 스프링 빈을 정의함을 나타냅니다.
    public SessionLocaleResolver localeResolver() { // 세션에 로케일 정보를 저장하는 리졸버를 생성하는 메서드입니다.
        SessionLocaleResolver localeResolver = new SessionLocaleResolver(); // SessionLocaleResolver 객체를 생성합니다.
        localeResolver.setDefaultLocale(Locale.KOREAN); // 기본 로케일을 한국어로 설정합니다.
        return localeResolver; // 로케일 리졸버 빈을 반환합니다.
    }

    /**
     * 언어 변경을 위한 인터셉터를 생성한다.
     */
    @Bean // 이 메서드가 스프링 빈을 정의함을 나타냅니다.
    public LocaleChangeInterceptor localeChangeInterceptor() { // 로케일 변경을 처리하는 인터셉터를 생성하는 메서드입니다.
        LocaleChangeInterceptor interceptor = new LocaleChangeInterceptor(); // LocaleChangeInterceptor 객체를 생성합니다.
        interceptor.setParamName("lang"); // 요청 파라미터 이름을 "lang"으로 설정합니다.
        return interceptor; // 로케일 변경 인터셉터 빈을 반환합니다.
    }

    /**
     * 인터셉터를 등록한다.
     */
    @Override // WebMvcConfigurer 인터페이스의 메서드를 오버라이드합니다.
    public void addInterceptors(InterceptorRegistry registry) { // 인터셉터를 등록하는 메서드입니다.
        registry.addInterceptor(localeChangeInterceptor()); // 로케일 변경 인터셉터를 등록합니다.
    }

    /**
     * 뷰 리졸버를 설정한다.
     */
    @Override // WebMvcConfigurer 인터페이스의 메서드를 오버라이드합니다.
    public void configureViewResolvers(ViewResolverRegistry registry) { // 뷰 리졸버를 설정하는 메서드입니다.
        InternalResourceViewResolver resolver = new InternalResourceViewResolver(); // InternalResourceViewResolver 객체를 생성합니다.
        resolver.setPrefix("/WEB-INF/jsp/"); // JSP 파일의 위치를 설정합니다.
        resolver.setSuffix(".jsp"); // JSP 파일의 확장자를 설정합니다.
        registry.viewResolver(resolver); // 뷰 리졸버를 등록합니다.
    }
}
